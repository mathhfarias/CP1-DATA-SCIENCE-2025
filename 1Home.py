import streamlit as st
import pandas as pd
import scipy.stats as stats
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
from plotnine import *

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Dashboard de Distribui√ß√µes Probabil√≠sticas", layout="wide")

# Criando as sub-abas (pages)
pages = st.sidebar.selectbox("Escolha a sua se√ß√£o:", [
    "Quem sou eu?",
    "Forma√ß√£o e Experi√™ncias Profissionais",
    "Skills",
    "Certificados",
    "An√°lise de Dados"
])

# Melhorando a Sidebar
st.sidebar.markdown("""
    <a href="https://github.com/mathhfarias" target="_blank">
        <button style="
            display: block;
            width: 100%;
            background-color: #24292e;
            color: white;
            padding: 10px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            margin-bottom: 10px;
            cursor: pointer;">
             üîó GitHub
        </button>
    </a>
    <a href="https://www.linkedin.com/in/matheus-farias-de-lima" target="_blank">
        <button style="
            display: block;
            width: 100%;
            background-color: #0077B5;
            color: white;
            padding: 10px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            margin-bottom: 20px;
            cursor: pointer;">
            üíº LinkedIn
        </button>
    </a>
""", unsafe_allow_html=True)

# Adicionando espa√ßamento extra
st.sidebar.markdown("<br>", unsafe_allow_html=True)

st.sidebar.markdown("### Desenvolvido por Matheus Farias de Lima")

if pages == "Quem sou eu?":
    st.image("IMAGES/MATHEUS.PNG", width=600, use_container_width=True)
    st.write("""
    -  **Estudante da Faculdade de Inform√°tica e Administra√ß√£o Paulista (FIAP)**, atualmente cursando **Engenharia de Software**.
    -  Apaixonado por **tecnologia e inova√ß√£o**, com grande interesse em oportunidades internacionais para **expandir experi√™ncias profissionais**.
    -  Foco em **desenvolvimento Front-End**, com conhecimento s√≥lido em diversas tecnologias.
    -  **Experi√™ncia pr√°tica** com projetos acad√™micos e desenvolvimento de solu√ß√µes para empresas reais.
    -  Tecnologias principais: **React, JavaScript, Java, Python, Docker e APIs REST**.
    """)

elif pages == "Forma√ß√£o e Experi√™ncias Profissionais":
    st.image("IMAGES/FIAP.png", width=600, use_container_width=True)
    st.header(" Forma√ß√£o e Experi√™ncias Profissionais")
    st.write("""
    - **Forma√ß√£o Acad√™mica:**
        - Engenharia de Software na **FIAP** (Faculdade de Inform√°tica e Administra√ß√£o Paulista).
    - **Experi√™ncia Profissional:**
        - Atualmente em busca da primeira oportunidade profissional na √°rea.
    - **Projetos Acad√™micos:**
        - Participa√ß√£o na **Global Solutions da FIAP**, desenvolvendo **websites e aplicativos** para empresas reais.
        - Desenvolvimento de solu√ß√µes para empresas como **Hospital das Cl√≠nicas e Rede √Çncora**.
    - **Certificados:**
        - Certifica√ß√µes em **programa√ß√£o** e **soft skills** atrav√©s de **FIAP Nano-Courses** e **Alura**.
    """)

elif pages == "Skills":
    st.image("IMAGES/SKILLS.png", width=600, use_container_width=True)
    st.header(" Skills")
    st.write("""
    - **Hard Skills:**
        - üîπ Especializa√ß√£o em **Front-End**
        - üîπ Linguagens de programa√ß√£o: **React, Python, Java, JavaScript**
        - üîπ Banco de Dados: **MySQL, PostgreSQL**
        - üîπ Ferramentas: **Git, Docker, APIs REST**
    - **Soft Skills:**
        - üó£Ô∏è **Habilidade de comunica√ß√£o:** Clareza ao expressar ideias e facilitar o trabalho em equipe.
        - ü§ù **Trabalho em equipe:** Capacidade de colabora√ß√£o e escuta ativa para contribuir em projetos.
        - ‚è≥ **Gest√£o de tempo e organiza√ß√£o:** Prioriza√ß√£o de tarefas e efici√™ncia no cumprimento de prazos.
    - **Idiomas:**
        - üåç **Fluente em ingl√™s**, certificado pelo **OHLA (Fl√≥rida) & TOEFL**.
        - üåç **B√°sico em espanhol**, aulas durante o periodo escolar.   
    """)


elif pages == "Certificados":
    st.image("IMAGES/CERTIFICADO DESIGN THINKING.png", width=600, use_container_width=True)
    st.image("IMAGES/CERTIFICADO GEST√ÉO DE INFRAESTRUTURA DE TI.png", width=600, use_container_width=True)
    st.image("IMAGES/CERTIFICADO FORMA√á√ÉO SOCIAL E SUSTENTABILIDADE.jpeg", width=600, use_container_width=True)
    st.image("IMAGES/CERTIFICADO HTML E CSS.JPG", width=600, use_container_width=True)

elif pages == "An√°lise de Dados":
    st.header(" An√°lise de Dados")

    st.write("Carregue um arquivo Excel para visualizar a distribui√ß√£o de uma vari√°vel num√©rica.")
    uploaded_file = st.file_uploader("Carregue seu arquivo Excel", type=["xlsx", "xls"])

    if uploaded_file is not None:
        df = pd.read_excel(uploaded_file)
        st.write(" ## Amostra dos dados: Twitch Streaming")
        st.write("""
    ## Problema:

    Analisar o comportamento dos views da Stream para entender quais fatores influenciam a satisfa√ß√£o e o tempo de visualiza√ß√£o, visando melhorar a reten√ß√£o de clientes e a recomenda√ß√£o de conte√∫do.

  
---

    
### üìù Dados e Tipos:

#### Estrutura dos Dados:
    - Channel (string): Nome do canal.
    - Watch time (Minutes) (int64): Tempo total assistido em minutos.
    - Stream time (Minutes) (int64): Tempo total de transmiss√£o em minutos.
    - Peak viewers (int64): M√°ximo de espectadores simult√¢neos.
    - Average viewers (int64): M√©dia de espectadores por transmiss√£o.
    - Followers (int64): Total de seguidores do canal.
    - Followers gained (int64): N√∫mero de seguidores ganhos.
    - Views gained (int64): N√∫mero de visualiza√ß√µes ganhas.
    - Partnered (bool): Indica se o canal √© parceiro do Twitch.
    - Mature (bool): Indica se o canal possui conte√∫do adulto.
    - Language (string): Idioma principal do canal.

### Estat√≠sticas Descritivas:
    - M√©dia de Watch Time: 418 milh√µes de minutos
    - M√°ximo de Watch Time: 6.2 bilh√µes de minutos
    - M√©dia de Peak Viewers: 37 mil espectadores
    - M√°ximo de Peak Viewers: 639 mil espectadores
    - M√©dia de seguidores ganhos: 205 mil
    - Distribui√ß√£o de idiomas: O ingl√™s domina, com 343 canais parceiros transmitindo nesse idioma.
### 1. Medidas Centrais:
### M√©dia:

- Tempo assistido: ~418 milh√µes de minutos
- Tempo de transmiss√£o: ~120 mil minutos
- Pico de espectadores: ~37 mil
- M√©dia de espectadores: ~4,7 mil
- Seguidores: ~570 mil
- Seguidores ganhos: ~205 mil
- Visualiza√ß√µes ganhas: ~11,6 milh√µes

### Mediana (valor central dos dados, menos sens√≠vel a outliers):

- Tempo assistido: ~235 milh√µes de minutos
- Tempo de transmiss√£o: ~108 mil minutos
- Pico de espectadores: ~16,6 mil
- M√©dia de espectadores: ~2,4 mil
- Moda (valor mais frequente nos dados):

Por exemplo, o tempo assistido mais frequente √© de ~122 milh√µes de minutos.

### 2. An√°lise de Dispers√£o:
### Desvio padr√£o (m√©dia de quanto os valores se afastam da m√©dia):

- Tempo assistido: ~549 milh√µes de minutos
- Pico de espectadores: ~60 mil
- M√©dia de espectadores: ~8,4 mil
- Vari√¢ncia (outra forma de medir dispers√£o):Alt√≠ssima para tempo assistido e pico de espectadores, o que indica grande varia√ß√£o nos dados.

### 3. Correla√ß√£o entre Vari√°veis:
Correla√ß√£o forte (pr√≥ximo de 1 ou -1):

- Tempo assistido x Pico de espectadores (0.58) ‚Üí canais mais assistidos tendem a ter picos maiores.
- Seguidores ganhos x Seguidores (0.71) ‚Üí canais maiores ganham mais seguidores.
- M√©dia de espectadores x Pico de espectadores (0.68) ‚Üí canais que atraem grandes p√∫blicos moment√¢neos tamb√©m mant√™m boa audi√™ncia m√©dia.
- Correla√ß√£o negativa: Tempo de transmiss√£o x M√©dia de espectadores (-0.25) ‚Üí canais que transmitem muito podem ter menos espectadores m√©dios, sugerindo que qualidade pode ser mais importante que quantidade.
                 
                 """)

        st.write("""      
##  **Perguntas e Respostas - An√°lise de Dados do Twitch**

    Nesta se√ß√£o, analisamos os dados do Twitch e respondemos a algumas perguntas-chave sobre audi√™ncia, engajamento e crescimento dos canais.

    *** 1. O crescimento de seguidores est√° mais correlacionado com o tempo de transmiss√£o ou com o pico de espectadores?**
    A an√°lise mostra que a quantidade de seguidores ganhos est√° mais relacionada com a capacidade do canal de atrair grandes audi√™ncias moment√¢neas do que com a quantidade de tempo que ele fica no ar. A correla√ß√£o entre tempo de transmiss√£o e seguidores ganhos √© praticamente nula.

    ### 2. Os canais que n√£o transmitem em ingl√™s t√™m crescimento proporcionalmente menor?**
    Como o ingl√™s domina em n√∫mero de canais e seguidores, os canais em outros idiomas t√™m, proporcionalmente, um crescimento menor. No entanto, isso pode ser mais uma quest√£o de volume do que de potencial, pois esses canais atendem nichos espec√≠ficos.

    ### 3. Existe uma rela√ß√£o entre o conte√∫do adulto Mature e o n√∫mero m√©dio de espectadores?**
    O Twitch tende a favorecer conte√∫dos n√£o adultos em recomenda√ß√µes e destaques, o que pode impactar a popularidade geral. Para responder com precis√£o, seria necess√°rio cruzar essa informa√ß√£o com os n√∫meros m√©dios de espectadores.

    ### 4. H√° canais com poucos seguidores, mas que conseguem altos picos de espectadores? O que isso pode indicar?**
    Sim! Um exemplo √© o canal Pestily, que teve um pico de 616.168 espectadores, mas n√£o est√° entre os que mais ganharam seguidores. Isso pode indicar eventos pontuais, colabora√ß√µes ou torneios que atraem p√∫blico tempor√°rio, sem convers√£o em seguidores.

    ### 5. Existe um idioma que apresenta maior fideliza√ß√£o dos espectadores em termos de m√©dia de visualiza√ß√µes ganhas?**
    Canais em idiomas menos comuns podem ter p√∫blicos mais fi√©is, pois atendem comunidades espec√≠ficas com menos alternativas. Por√©m, o ingl√™s lidera em n√∫mero absoluto de visualiza√ß√µes.

    ###  Quais s√£o os 10 principais canais por pico de espectadores?
    | #  | Canal         | Pico de Espectadores |
    |----|---------------|--------------------|
    | 1  | Summit1g      | 310.998            |
    | 6  | NICKMERCS     | 407.428            |
    | 15 | MontanaBlack88| 110.109            |
    | 16 | Sodapoppin    | 393.348            |
    | 28 | Pestily       | 616.168            |

    ###  Quais s√£o os 10 principais canais por seguidores ganhos?
    | #  | Canal         | Seguidores Ganhos |
    |----|---------------|-------------------|
    | 1  | Summit1g      | 25.610            |
    | 6  | NICKMERCS     | 46.084.211        |
    | 15 | MontanaBlack88| 67.740            |
    | 16 | Sodapoppin    | 2.786.162         |
    | 28 | Pestily       | 24.029.726        |

    ###  Quais s√£o os 10 principais canais por visualiza√ß√µes ganhas?
    | #  | Canal         | Visualiza√ß√µes Obtidas |
    |----|---------------|----------------------|
    | 1  | Summit1g      | 5.310.163            |
    | 6  | NICKMERCS     | 1.089.824            |
    | 15 | MontanaBlack88| 181.600              |
    | 16 | Sodapoppin    | 19.659              |
    | 28 | Pestily       | 168.112              |

    ### üìå Existe uma correla√ß√£o entre o tempo de transmiss√£o e o pico de espectadores?
    - A correla√ß√£o entre o tempo de transmiss√£o e o pico de espectadores √© de aproximadamente ###-0.02###.
    - Isso indica uma correla√ß√£o negativa muito fraca, praticamente inexistente.
    - Em outras palavras, **n√£o h√° uma rela√ß√£o linear significativa** entre o tempo de transmiss√£o e o n√∫mero de espectadores simult√¢neos.

    ###  Qual √© a distribui√ß√£o de canais por idioma?
    | Idioma     | Quantidade de Canais |
    |------------|--------------------|
    | English    | 20                 |
    | Korean     | 2                  |
    | Spanish    | 3                  |
    | Portuguese | 3                  |
    | German     | 2                  |
    | French     | 3                  |
    | Russian    | 1                  |
    
        """)
                            
        st.write(r"""
### üìä Distribui√ß√µes:

#### - **Distribui√ß√£o Normal:**
   A distribui√ß√£o normal √© usada para modelar vari√°veis cont√≠nuas que seguem uma distribui√ß√£o sim√©trica em torno de uma m√©dia.  
   Por exemplo, o tempo de exibi√ß√£o dos streamers pode seguir uma distribui√ß√£o normal, permitindo analisar a probabilidade de um streamer ter um tempo de exibi√ß√£o em um determinado intervalo.  
   A f√≥rmula da distribui√ß√£o normal para calcular a probabilidade de uma vari√°vel \( X \) estar entre dois valores \( a \) e \( b \) √©:
   \[
   P(a < X < b) = \Phi\left(\frac{b - \mu}{\sigma}\right) - \Phi\left(\frac{a - \mu}{\sigma}\right)
   \]
   Onde:
   - \( \mu \): M√©dia da distribui√ß√£o.
   - \( \sigma \): Desvio padr√£o da distribui√ß√£o.
   - \( \Phi \): Fun√ß√£o de distribui√ß√£o acumulada da normal padr√£o.

#### - **Distribui√ß√£o Binomial:**
   A distribui√ß√£o binomial √© usada para calcular a probabilidade de um n√∫mero espec√≠fico de sucessos em um n√∫mero fixo de tentativas independentes, onde cada tentativa tem apenas dois resultados poss√≠veis (sucesso ou fracasso).  
   Por exemplo, a probabilidade de um streamer ser parceiro da Twitch pode ser modelada por uma distribui√ß√£o binomial, onde cada streamer √© uma tentativa com probabilidade de sucesso (ser parceiro) ou fracasso (n√£o ser parceiro).  
   A f√≥rmula da distribui√ß√£o binomial para calcular a probabilidade de exatamente \( k \) sucessos em \( n \) tentativas √©:
   \[
   P(X = k) = C(n, k) \cdot p^k \cdot (1-p)^{n-k}
   \]
   Onde:
   - \( n \): N√∫mero total de tentativas.
   - \( k \): N√∫mero de sucessos desejados.
   - \( p \): Probabilidade de sucesso em uma √∫nica tentativa.
   - \( C(n, k) \): Coeficiente binomial, que representa o n√∫mero de combina√ß√µes de \( n \) elementos tomados \( k \) a \( k \).

#### - **Distribui√ß√£o de Poisson:**
   A distribui√ß√£o de Poisson √© usada para modelar o n√∫mero de eventos que ocorrem em um intervalo de tempo ou espa√ßo, quando esses eventos acontecem com uma taxa m√©dia conhecida e s√£o independentes do tempo desde o √∫ltimo evento.  
   Por exemplo, o n√∫mero de visualiza√ß√µes de um determinado conte√∫do em um per√≠odo de tempo pode ser modelado por uma distribui√ß√£o de Poisson.  
   A f√≥rmula da distribui√ß√£o de Poisson para calcular a probabilidade de \( k \) eventos ocorrerem em um intervalo √©:
   \[
   P(X = k) = \frac{\lambda^k e^{-\lambda}}{k!}
   \]
   Onde:
   - \( \lambda \): Taxa m√©dia de ocorr√™ncia dos eventos.
   - \( k \): N√∫mero de eventos desejados.
   - \( e \): Constante de Euler (aproximadamente 2.71828).
""")
        
        # Move the code that uses `df` inside the `if uploaded_file is not None:` block
        st.write(df.head())
        colunas_numericas = df.select_dtypes(include=[np.number]).columns.tolist()
        if colunas_numericas:
            coluna_escolhida = st.selectbox(" Escolha uma coluna num√©rica:", colunas_numericas)

            if coluna_escolhida:
                st.write(" **Distribui√ß√£o dos dados:**")
                st.write(df[coluna_escolhida].describe())

                dist = st.selectbox(" Escolha a distribui√ß√£o para an√°lise:", ["Poisson", "Normal", "Binomial"])

                if dist == "Poisson":
                    lambda_est = df[coluna_escolhida].mean()
                    x = np.arange(0, 2 * lambda_est)
                    y = stats.poisson.pmf(x, lambda_est)
                    st.write(" **Distribui√ß√£o de Poisson**")
                    fig = go.Figure(data=[go.Bar(x=x, y=y)])
                    st.plotly_chart(fig)

                elif dist == "Normal":
                    mu_est = df[coluna_escolhida].mean()
                    sigma_est = df[coluna_escolhida].std()
                    x = np.linspace(mu_est - 4*sigma_est, mu_est + 4*sigma_est, 100)
                    y = stats.norm.pdf(x, mu_est, sigma_est)
                    st.write(" **Distribui√ß√£o Normal**")
                    fig = go.Figure(data=[go.Scatter(x=x, y=y, mode='lines')])
                    st.plotly_chart(fig)

                elif dist == "Binomial":
                    n = 10  # n√∫mero de tentativas fixo
                    p = df[coluna_escolhida].mean() / max(df[coluna_escolhida])
                    x = np.arange(0, n + 1)
                    y = stats.binom.pmf(x, n, p)
                    st.write(" **Distribui√ß√£o Binomial**")
                    fig = go.Figure(data=[go.Bar(x=x, y=y)])
                    st.plotly_chart(fig)